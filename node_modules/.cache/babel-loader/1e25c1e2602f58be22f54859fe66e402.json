{"ast":null,"code":"var _jsxFileName = \"/Users/macx/Desktop/final-project-superteam/version_4/src/pages/ChatRoom.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { connect } from 'react-redux';\nimport Messages from \"./Messages\";\nimport NewTopic from \"./NewTopic\";\nimport ShowTopic from './ShowTopic';\nimport Input from \"./Input\";\nimport io from \"socket.io-client\";\nimport { setMessages, setMessage } from '../redux/actions/topicActions';\nlet socket;\n\nconst ChatRoom = ({\n  dispatch,\n  currentTopic,\n  username,\n  messages,\n  message\n}) => {\n  const ENDPOINT = 'http://localhost:3003';\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      username,\n      currentTopic\n    }, err => {\n      if (err) {\n        alert(err);\n      }\n    });\n  }, [currentTopic]);\n  useEffect(() => {\n    socket.on('message', message => {\n      dispatch(setMessages(message.text));\n    }, [messages]);\n    return () => {\n      socket.emit('disconnect', (username, currentTopic));\n      socket.off();\n    };\n  });\n\n  const sendMessage = () => {\n    if (message) {\n      const data = {\n        message: message,\n        currentTopic: currentTopic\n      };\n      socket.emit('sendMessage', data, () => dispatch(setMessage('')));\n    }\n  };\n\n  return React.createElement(Container, {\n    className: \"container mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    style: {\n      backgroundColor: '#c1e5f7'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(NewTopic, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(ShowTopic, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 8,\n    style: {\n      backgroundColor: '#ebf3fc'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Messages, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Input, {\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  username: state.loginReducer.username,\n  messages: state.topicReducer.messages,\n  message: state.topicReducer.message,\n  currentTopic: state.topicReducer.currentTopic\n});\n\nexport default connect(mapStateToProps)(ChatRoom);","map":{"version":3,"sources":["/Users/macx/Desktop/final-project-superteam/version_4/src/pages/ChatRoom.js"],"names":["React","useState","useEffect","Container","Row","Col","connect","Messages","NewTopic","ShowTopic","Input","io","setMessages","setMessage","socket","ChatRoom","dispatch","currentTopic","username","messages","message","ENDPOINT","emit","err","alert","on","text","off","sendMessage","data","backgroundColor","mapStateToProps","state","loginReducer","topicReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { connect } from 'react-redux';\nimport Messages from \"./Messages\";\nimport NewTopic from \"./NewTopic\";\nimport ShowTopic from './ShowTopic';\nimport Input from \"./Input\";\nimport io from \"socket.io-client\";\nimport { setMessages, setMessage } from '../redux/actions/topicActions';\n\nlet socket;\n\nconst ChatRoom = ({dispatch, currentTopic, username, messages, message}) => {\n\n  const ENDPOINT = 'http://localhost:3003';\n  \n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('join', {username, currentTopic}, (err) => {\n      if(err) {\n        alert(err);\n      }\n    });\n  }, [currentTopic]);\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      dispatch(setMessages(message.text));\n    }, [messages]);\n\n    return () => {\n      socket.emit('disconnect', (username, currentTopic));\n      socket.off();\n    }\n  })\n\n  const sendMessage = () => {\n    if(message) {\n      const data = {\n        message: message,\n        currentTopic: currentTopic,\n      }\n      socket.emit('sendMessage', data, () => dispatch(setMessage('')));\n    }\n  }\n\n  return (\n    <Container className=\"container mt-5\">\n        <Row>\n          <Col sm={4} style={{backgroundColor: '#c1e5f7'}}>\n            <NewTopic/>\n            <ShowTopic/>\n          </Col>\n          <Col sm={8} style={{backgroundColor: '#ebf3fc'}}>\n            <Messages/>\n            <Input sendMessage={sendMessage}/>   \n          </Col>\n        </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => ({\n  username: state.loginReducer.username,\n  messages: state.topicReducer.messages,\n  message: state.topicReducer.message,\n  currentTopic: state.topicReducer.currentTopic,\n});\n\nexport default connect(mapStateToProps)(ChatRoom);\n"]},"metadata":{},"sourceType":"module"}