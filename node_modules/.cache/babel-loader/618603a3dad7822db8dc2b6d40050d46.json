{"ast":null,"code":"var _jsxFileName = \"/Users/macx/Desktop/hw3-teamx/src/pages/Navbar.js\";\nimport React from 'react';\nimport '../App.css';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setIsLoggedIn } from '../redux/actions/loginActions';\nimport { setIsEditClicked, setIsNoteAdded, setIsEditSubmitted, setPreviousNotes } from '../redux/actions/notesActions';\nimport { setIsUserCreated } from '../redux/actions/registerActions';\n\nconst NavbarLink = ({\n  dispatch,\n  isLoggedIn,\n  username\n}) => {\n  const logOut = e => {\n    e.preventDefault(); //reset all boolean state to initial state\n\n    dispatch(setIsLoggedIn(false));\n    dispatch(setIsUserCreated(false));\n    dispatch(setIsEditClicked(false));\n    dispatch(setIsNoteAdded(false));\n    dispatch(setIsEditSubmitted(false));\n    dispatch(setPreviousNotes(''));\n  };\n\n  let nav;\n\n  if (isLoggedIn) {\n    nav = React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Hi, \", username, \"!\"), React.createElement(\"a\", {\n      href: \"null\",\n      className: \"nav-link\",\n      onClick: logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Logout\"));\n  } else {\n    nav = React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"nav-link\",\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Login\"), React.createElement(NavLink, {\n      className: \"nav-link\",\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Sign up\"));\n  }\n\n  return React.createElement(Navbar, {\n    bg: \"light justify-content-between\",\n    variant: \"light\",\n    sticky: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    className: \"nav-brand\",\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"NoteTaking\"), React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    className: \"nav-link\",\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Notes\")), nav);\n};\n\nconst mapStateToProps = state => ({\n  isUserCreated: state.registerReducer.isUserCreated,\n  username: state.loginReducer.username,\n  isLoggedIn: state.loginReducer.isLoggedIn,\n  isEditClicked: state.notesReducer.isEditClicked,\n  isNoteAdded: state.notesReducer.isEditClicked\n});\n\nexport default connect(mapStateToProps)(NavbarLink);","map":{"version":3,"sources":["/Users/macx/Desktop/hw3-teamx/src/pages/Navbar.js"],"names":["React","Navbar","Nav","NavLink","connect","setIsLoggedIn","setIsEditClicked","setIsNoteAdded","setIsEditSubmitted","setPreviousNotes","setIsUserCreated","NavbarLink","dispatch","isLoggedIn","username","logOut","e","preventDefault","nav","mapStateToProps","state","isUserCreated","registerReducer","loginReducer","isEditClicked","notesReducer","isNoteAdded"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setIsLoggedIn } from '../redux/actions/loginActions';\nimport { setIsEditClicked, setIsNoteAdded, setIsEditSubmitted, setPreviousNotes } from '../redux/actions/notesActions';\nimport { setIsUserCreated } from '../redux/actions/registerActions';\n\nconst NavbarLink = ({ dispatch, isLoggedIn, username }) => {\n\n    const logOut = (e) => {\n        e.preventDefault()\n        //reset all boolean state to initial state\n        dispatch(setIsLoggedIn(false)); \n        dispatch(setIsUserCreated(false));\n        dispatch(setIsEditClicked(false));\n        dispatch(setIsNoteAdded(false));\n        dispatch(setIsEditSubmitted(false));\n        dispatch(setPreviousNotes(''));\n    }\n\n    let nav;\n    if(isLoggedIn) {\n        nav = <Nav>\n                <li className=\"nav-link\">Hi, {username}!</li>\n                <a href='null' className=\"nav-link\" onClick={logOut}>Logout</a>\n            </Nav>\n    }else{\n        nav = <Nav>\n                <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\n                <NavLink className=\"nav-link\" to=\"/register\">Sign up</NavLink>\n              </Nav>\n    }\n\n    return(\n        <Navbar bg=\"light justify-content-between\" variant=\"light\" sticky=\"top\">\n            <Navbar.Brand className=\"nav-brand\" to=\"/\">NoteTaking</Navbar.Brand>\n            <Nav>\n                <NavLink className=\"nav-link\" to=\"/\">Notes</NavLink>\n            </Nav>\n            {nav}\n      </Navbar>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isUserCreated: state.registerReducer.isUserCreated,\n    username: state.loginReducer.username,\n    isLoggedIn: state.loginReducer.isLoggedIn,\n    isEditClicked: state.notesReducer.isEditClicked,\n    isNoteAdded: state.notesReducer.isEditClicked,\n});\n\nexport default connect(mapStateToProps)(NavbarLink);"]},"metadata":{},"sourceType":"module"}