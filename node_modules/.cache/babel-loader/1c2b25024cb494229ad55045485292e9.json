{"ast":null,"code":"var _jsxFileName = \"/Users/macx/Desktop/final-project-superteam/version_1/src/pages/Input.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { setContent, addNotes, setIsNoteAdded } from '../redux/actions/notesActions';\n\nconst Input = ({\n  dispatch,\n  isLoggedIn\n}) => {\n  const userVerification = e => {\n    e.preventDefault();\n\n    if (isLoggedIn) {\n      dispatch(addNotes()).then(res => {\n        if (res === true) {\n          dispatch(setIsNoteAdded(true)); //set isNoteAdded to true after each submission\n        }\n      });\n    }\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Type a message...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Send\"));\n};\n\nconst mapStateToProps = state => ({\n  content: state.notesReducer.content,\n  isNoteAdded: state.notesReducer.isNoteAdded,\n  isLoggedIn: state.loginReducer.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(Input);","map":{"version":3,"sources":["/Users/macx/Desktop/final-project-superteam/version_1/src/pages/Input.js"],"names":["React","connect","Form","Button","setContent","addNotes","setIsNoteAdded","Input","dispatch","isLoggedIn","userVerification","e","preventDefault","then","res","mapStateToProps","state","content","notesReducer","isNoteAdded","loginReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,cAA/B,QAAqD,+BAArD;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA4B;AAEtC,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGH,UAAH,EAAe;AACXD,MAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR,CAAqBQ,IAArB,CAA0BC,GAAG,IAAI;AAC7B,YAAGA,GAAG,KAAK,IAAX,EAAgB;AACZN,UAAAA,QAAQ,CAACF,cAAc,CAAC,IAAD,CAAf,CAAR,CADY,CACoB;AACnC;AACJ,OAJD;AAKH;AACJ,GATD;;AAWA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAE,mBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAOI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADJ;AAaH,CA1BD;;AA4BA,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,OAAO,EAAED,KAAK,CAACE,YAAN,CAAmBD,OADE;AAE9BE,EAAAA,WAAW,EAAEH,KAAK,CAACE,YAAN,CAAmBC,WAFF;AAG9BV,EAAAA,UAAU,EAAEO,KAAK,CAACI,YAAN,CAAmBX;AAHD,CAAL,CAA7B;;AAMA,eAAeR,OAAO,CAACc,eAAD,CAAP,CAAyBR,KAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { setContent, addNotes, setIsNoteAdded } from '../redux/actions/notesActions';\n\n\nconst Input = ({dispatch, isLoggedIn}) => {\n    \n    const userVerification = (e) => {\n        e.preventDefault();\n        if(isLoggedIn) {\n            dispatch(addNotes()).then(res => {\n                if(res === true){\n                    dispatch(setIsNoteAdded(true)); //set isNoteAdded to true after each submission\n                }\n            }); \n        }\n    }\n    \n    return (\n        <Form>\n            <Form.Group>\n                <Form.Control \n                    type='text'\n                    placeholder= 'Type a message...'\n                />\n            </Form.Group>\n            <Button variant='primary' type='submit'>\n                Send\n            </Button>\n        </Form> \n    )\n}\n\nconst mapStateToProps = state => ({\n    content: state.notesReducer.content,\n    isNoteAdded: state.notesReducer.isNoteAdded,\n    isLoggedIn: state.loginReducer.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(Input);\n"]},"metadata":{},"sourceType":"module"}