{"ast":null,"code":"import axios from 'axios';\nexport const setTopic = topic => ({\n  type: 'SET_TOPIC',\n  topic\n});\nexport const setAllTopic = allTopic => ({\n  type: 'SET_ALL_TOPIC',\n  allTopic\n});\nexport const addNewTopic = () => (dispatch, getState) => {\n  const topic = getState().topicReducer.topic;\n  const username = getState().loginReducer.username;\n  return axios.post('/service2/newTopic', {\n    topic: topic,\n    username: username\n  }).then(response => {\n    if (response.data.response) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n};\nexport const getAllTopic = () => (dispatch, getState) => {\n  axios.get('/service2/topic').then(res => {});\n};","map":{"version":3,"sources":["/Users/macx/Desktop/final-project-superteam/version_2/src/redux/actions/topicActions.js"],"names":["axios","setTopic","topic","type","setAllTopic","allTopic","addNewTopic","dispatch","getState","topicReducer","username","loginReducer","post","then","response","data","getAllTopic","get","res"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,IAAI,EAAE,WADwB;AAE9BD,EAAAA;AAF8B,CAAL,CAAtB;AAKL,OAAO,MAAME,WAAW,GAAGC,QAAQ,KAAK;AACtCF,EAAAA,IAAI,EAAE,eADgC;AAEtCE,EAAAA;AAFsC,CAAL,CAA5B;AAKT,OAAO,MAAMC,WAAW,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA,QAC7CN,KAD6C,GACnCM,QAAQ,GAAGC,YADwB,CAC7CP,KAD6C;AAAA,QAE7CQ,QAF6C,GAEhCF,QAAQ,GAAGG,YAFqB,CAE7CD,QAF6C;AAGrD,SAAOV,KAAK,CAACY,IAAN,CAAW,oBAAX,EAAiC;AACpCV,IAAAA,KAAK,EAAEA,KAD6B;AAEpCQ,IAAAA,QAAQ,EAAEA;AAF0B,GAAjC,EAING,IAJM,CAIDC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,IAAT,CAAcD,QAAjB,EAA2B;AACvB,aAAO,IAAP;AACH,KAFD,MAEK;AACD,aAAO,KAAP;AACH;AACJ,GAVM,CAAP;AAWH,CAdM;AAgBP,OAAO,MAAME,WAAW,GAAG,MAAM,CAACT,QAAD,EAAWC,QAAX,KAAwB;AACrDR,EAAAA,KAAK,CAACiB,GAAN,CAAU,iBAAV,EACKJ,IADL,CACWK,GAAD,IAAS,CAEd,CAHL;AAIH,CALM","sourcesContent":["import axios from 'axios';\n\n\nexport const setTopic = topic => ({ \n    type: 'SET_TOPIC',\n    topic,\n  });\n\n  export const setAllTopic = allTopic => ({ \n    type: 'SET_ALL_TOPIC',\n    allTopic,\n  });\n\nexport const addNewTopic = () => (dispatch, getState) => {\n    const { topic } = getState().topicReducer;\n    const { username } = getState().loginReducer;\n    return axios.post('/service2/newTopic', {\n        topic: topic,\n        username: username\n    })\n    .then(response => {\n        if(response.data.response) {\n            return true;\n        }else{\n            return false;\n        }\n    })\n}\n\nexport const getAllTopic = () => (dispatch, getState) => {\n    axios.get('/service2/topic')\n        .then((res) => {\n\n        })\n}\n"]},"metadata":{},"sourceType":"module"}