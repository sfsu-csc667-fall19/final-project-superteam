{"ast":null,"code":"var _jsxFileName = \"/Users/macx/Desktop/hw3-teamx/src/pages/Register.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Landing from './Landing';\nimport { setEmail, setPassword, setUsername, setIsUserCreated, createNewuser } from '../redux/actions/registerActions';\nimport { setIsLoggedIn } from '../redux/actions/loginActions';\nimport { Form, Button } from 'react-bootstrap';\n\nconst Register = ({\n  dispatch,\n  isUserCreated,\n  isLoggedIn\n}) => {\n  const onClick = e => {\n    e.preventDefault();\n\n    if (!isUserCreated) {\n      dispatch(createNewuser()).then(res => {\n        if (res === true) {\n          dispatch(setIsUserCreated(true));\n          dispatch(setIsLoggedIn(true));\n        } else {\n          dispatch(setIsUserCreated(false));\n        }\n      });\n    }\n  };\n\n  const registerForm = React.createElement(Form, {\n    className: \"container col-sm-3 mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"user name\",\n    onChange: e => dispatch(setUsername(e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"email\",\n    onChange: e => dispatch(setEmail(e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: e => dispatch(setPassword(e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Submit\"));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, isLoggedIn ? React.createElement(Landing, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }) : registerForm);\n};\n\nconst mapStateToProps = state => ({\n  username: state.registerReducer.username,\n  email: state.registerReducer.email,\n  password: state.registerReducer.password,\n  isUserCreated: state.registerReducer.isUserCreated,\n  isLoggedIn: state.loginReducer.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(Register);","map":{"version":3,"sources":["/Users/macx/Desktop/hw3-teamx/src/pages/Register.js"],"names":["React","connect","Landing","setEmail","setPassword","setUsername","setIsUserCreated","createNewuser","setIsLoggedIn","Form","Button","Register","dispatch","isUserCreated","isLoggedIn","onClick","e","preventDefault","then","res","registerForm","target","value","mapStateToProps","state","username","registerReducer","email","password","loginReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Landing from './Landing';\nimport { setEmail, setPassword, setUsername, setIsUserCreated, createNewuser} from '../redux/actions/registerActions';\nimport { setIsLoggedIn } from '../redux/actions/loginActions';\nimport { Form, Button } from 'react-bootstrap';\n\nconst Register = ({ dispatch, isUserCreated, isLoggedIn }) => {\n    const onClick = (e) => {\n        e.preventDefault()\n        if(!isUserCreated) {\n            dispatch(createNewuser()).then(res => {\n                if(res === true) {\n                    dispatch(setIsUserCreated(true));\n                    dispatch(setIsLoggedIn(true));\n                }else{\n                    dispatch(setIsUserCreated(false));\n                }\n            })\n        }\n    }\n\n    const registerForm = (\n        <Form className='container col-sm-3 mt-5'>\n            <Form.Label>Sign Up</Form.Label>\n            <Form.Group>\n                <Form.Control \n                    type='text'\n                    placeholder='user name'\n                    onChange = {e => dispatch(setUsername(e.target.value))}\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    type='text'\n                    placeholder='email'\n                    onChange = {e => dispatch(setEmail(e.target.value))}\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control \n                    type='password' \n                    placeholder='password'\n                    onChange = {e => dispatch(setPassword(e.target.value))}\n                />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\"\n                onClick = {onClick}\n            >\n                Submit\n            </Button>\n        </Form>\n    )\n\n    return (\n        <div>\n            {isLoggedIn? <Landing/> : registerForm}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    username: state.registerReducer.username,\n    email: state.registerReducer.email,\n    password: state.registerReducer.password,\n    isUserCreated: state.registerReducer.isUserCreated,\n    isLoggedIn: state.loginReducer.isLoggedIn,\n});\n\nexport default connect(mapStateToProps)(Register);"]},"metadata":{},"sourceType":"module"}