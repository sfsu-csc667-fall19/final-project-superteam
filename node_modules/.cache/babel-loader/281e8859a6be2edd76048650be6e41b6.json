{"ast":null,"code":"var _jsxFileName = \"/Users/macx/Desktop/final-project-superteam/version_4/src/pages/NewTopic.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Button, Form } from \"react-bootstrap\";\nimport { setTopic, setIsNewTopicAdded, addNewTopic } from '../redux/actions/topicActions';\n\nconst NewTopic = ({\n  dispatch,\n  topic\n}) => {\n  const onClick = e => {\n    e.preventDefault();\n    dispatch(addNewTopic()).then(res => {\n      if (res === true) {\n        dispatch(setIsNewTopicAdded(true));\n        dispatch(setTopic('')); // clear the text field \n      }\n    });\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Create a new topic...\",\n    value: topic,\n    onChange: e => dispatch(setTopic(e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"+\"));\n};\n\nconst mapStateToProps = state => ({\n  topic: state.topicReducer.topic,\n  isNewTopicAdded: state.topicReducer.isNewTopicAdded\n});\n\nexport default connect(mapStateToProps)(NewTopic);","map":{"version":3,"sources":["/Users/macx/Desktop/final-project-superteam/version_4/src/pages/NewTopic.js"],"names":["React","useState","useEffect","connect","Button","Form","setTopic","setIsNewTopicAdded","addNewTopic","NewTopic","dispatch","topic","onClick","e","preventDefault","then","res","target","value","mapStateToProps","state","topicReducer","isNewTopicAdded"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,SAASC,QAAT,EAAmBC,kBAAnB,EAAuCC,WAAvC,QAA0D,+BAA1D;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAEtC,QAAMC,OAAO,GAAIC,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,QAAQ,CAACF,WAAW,EAAZ,CAAR,CAAwBO,IAAxB,CAA8BC,GAAD,IAAS;AACpC,UAAGA,GAAG,KAAK,IAAX,EAAiB;AACfN,QAAAA,QAAQ,CAACH,kBAAkB,CAAC,IAAD,CAAnB,CAAR;AACAG,QAAAA,QAAQ,CAACJ,QAAQ,CAAC,EAAD,CAAT,CAAR,CAFe,CAES;AACzB;AACF,KALD;AAMD,GARD;;AAUA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAE,uBAFjB;AAGI,IAAA,KAAK,EAAEK,KAHX;AAII,IAAA,QAAQ,EAAIE,CAAC,IAAIH,QAAQ,CAACJ,QAAQ,CAACO,CAAC,CAACI,MAAF,CAASC,KAAV,CAAT,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EASI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AACE,IAAA,OAAO,EAAEN,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATJ,CADF;AAiBD,CA7BD;;AA+BA,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,KAAK,EAAES,KAAK,CAACC,YAAN,CAAmBV,KADM;AAEhCW,EAAAA,eAAe,EAAEF,KAAK,CAACC,YAAN,CAAmBC;AAFJ,CAAL,CAA7B;;AAKA,eAAenB,OAAO,CAACgB,eAAD,CAAP,CAAyBV,QAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Button, Form } from \"react-bootstrap\";\nimport { setTopic, setIsNewTopicAdded, addNewTopic } from '../redux/actions/topicActions';\n\nconst NewTopic = ({dispatch, topic}) => { \n\n  const onClick = (e) => {\n    e.preventDefault();\n    dispatch(addNewTopic()).then((res) => {\n      if(res === true) {\n        dispatch(setIsNewTopicAdded(true));\n        dispatch(setTopic('')); // clear the text field \n      }\n    });\n  }\n\n  return (\n    <Form>\n        <Form.Group>\n            <Form.Control \n                type='text'\n                placeholder= 'Create a new topic...'\n                value={topic}\n                onChange = {e => dispatch(setTopic(e.target.value))}\n            />\n        </Form.Group>\n        <Button variant='primary' type='submit'\n          onClick={onClick}\n        >\n            +\n        </Button>\n    </Form> \n  );\n}\n\nconst mapStateToProps = state => ({\n  topic: state.topicReducer.topic,\n  isNewTopicAdded: state.topicReducer.isNewTopicAdded,\n});\n\nexport default connect(mapStateToProps)(NewTopic);\n"]},"metadata":{},"sourceType":"module"}