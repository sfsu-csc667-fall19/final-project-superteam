{"ast":null,"code":"import axios from 'axios';\nimport md5 from 'md5';\nexport const setEmail = email => ({\n  type: 'SET_EMAIL',\n  email\n});\nexport const setUsername = username => ({\n  type: 'SET_USERNAME',\n  username\n});\nexport const setPassword = password => ({\n  type: 'SET_PASSWORD',\n  password\n});\nexport const setIsUserCreated = isUserCreated => ({\n  type: 'SET_IS_USER_CREATED',\n  isUserCreated\n});\nexport const createNewuser = () => (dispatch, getState) => {\n  const _getState$registerRed = getState().registerReducer,\n        username = _getState$registerRed.username,\n        email = _getState$registerRed.email,\n        password = _getState$registerRed.password;\n  return axios.post('/service1/register', {\n    username: username,\n    email: email,\n    password: md5(password)\n  }).then(response => {\n    if (response.data === true) {\n      return true;\n    } else {\n      return false;\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/Users/macx/Desktop/final-project-superteam/version_3/src/redux/actions/registerActions.js"],"names":["axios","md5","setEmail","email","type","setUsername","username","setPassword","password","setIsUserCreated","isUserCreated","createNewuser","dispatch","getState","registerReducer","post","then","response","data","catch","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,IAAI,EAAE,WADwB;AAE9BD,EAAAA;AAF8B,CAAL,CAAtB;AAKP,OAAO,MAAME,WAAW,GAAGC,QAAQ,KAAK;AACpCF,EAAAA,IAAI,EAAE,cAD8B;AAEpCE,EAAAA;AAFoC,CAAL,CAA5B;AAKP,OAAO,MAAMC,WAAW,GAAGC,QAAQ,KAAK;AACpCJ,EAAAA,IAAI,EAAE,cAD8B;AAEpCI,EAAAA;AAFoC,CAAL,CAA5B;AAKP,OAAO,MAAMC,gBAAgB,GAAGC,aAAa,KAAK;AAC9CN,EAAAA,IAAI,EAAE,qBADwC;AAE9CM,EAAAA;AAF8C,CAAL,CAAtC;AAKP,OAAO,MAAMC,aAAa,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA,gCACjBA,QAAQ,GAAGC,eADM;AAAA,QAC/CR,QAD+C,yBAC/CA,QAD+C;AAAA,QACrCH,KADqC,yBACrCA,KADqC;AAAA,QAC9BK,QAD8B,yBAC9BA,QAD8B;AAEvD,SAAOR,KAAK,CAACe,IAAN,CAAW,oBAAX,EAAiC;AACpCT,IAAAA,QAAQ,EAAEA,QAD0B;AAEpCH,IAAAA,KAAK,EAAEA,KAF6B;AAGpCK,IAAAA,QAAQ,EAAEP,GAAG,CAACO,QAAD;AAHuB,GAAjC,EAKNQ,IALM,CAKAC,QAAQ,IAAI;AACf,QAAGA,QAAQ,CAACC,IAAT,KAAkB,IAArB,EAA2B;AACvB,aAAO,IAAP;AACH,KAFD,MAEK;AACD,aAAO,KAAP;AACH;AACJ,GAXM,EAYNC,KAZM,CAYAC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAdM,CAAP;AAeH,CAjBM","sourcesContent":["import axios from 'axios';\nimport md5 from 'md5';\n\nexport const setEmail = email => ({ \n    type: 'SET_EMAIL',\n    email,\n  });\n\nexport const setUsername = username => ({\n    type: 'SET_USERNAME',\n    username,\n});\n\nexport const setPassword = password => ({ \n    type: 'SET_PASSWORD',\n    password,\n});\n\nexport const setIsUserCreated = isUserCreated => ({ \n    type: 'SET_IS_USER_CREATED',\n    isUserCreated,\n});\n\nexport const createNewuser = () => (dispatch, getState) => {\n    const { username, email, password } = getState().registerReducer;\n    return axios.post('/service1/register', {\n        username: username,\n        email: email,\n        password: md5(password),\n    })\n    .then( response => {\n        if(response.data === true) {\n            return true;\n        }else{\n            return false;\n        }\n    })\n    .catch(error => {\n        console.log(error);\n    });\n}\n\n\n\n\n\n\n\n  "]},"metadata":{},"sourceType":"module"}