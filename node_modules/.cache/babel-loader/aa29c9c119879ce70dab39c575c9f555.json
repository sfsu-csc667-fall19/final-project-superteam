{"ast":null,"code":"import axios from 'axios';\nimport md5 from 'md5';\nimport jwt_decode from 'jwt-decode';\nexport const setEmail = email => ({\n  type: 'SET_EMAIL',\n  email\n});\nexport const setUsername = username => ({\n  type: 'SET_USERNAME',\n  username\n});\nexport const setPassword = password => ({\n  type: 'SET_PASSWORD',\n  password\n});\nexport const setIsLoggedIn = isLoggedIn => ({\n  type: 'SET_IS_LOGGED_IN',\n  isLoggedIn\n});\nexport const verifyUser = () => (dispatch, getState) => {\n  const _getState$loginReduce = getState().loginReducer,\n        email = _getState$loginReduce.email,\n        password = _getState$loginReduce.password;\n  return axios.post('/service1/login', {\n    email: email,\n    password: md5(password)\n  }).then(response => {\n    if (response.data.response === true) {\n      dispatch(setUsername(response.data.name));\n      return true;\n    } else {\n      return false;\n    }\n  }).catch(err => {\n    console.log('error: ' + err);\n  });\n};","map":{"version":3,"sources":["/Users/macx/Desktop/hw3-teamx/src/redux/actions/loginActions.js"],"names":["axios","md5","jwt_decode","setEmail","email","type","setUsername","username","setPassword","password","setIsLoggedIn","isLoggedIn","verifyUser","dispatch","getState","loginReducer","post","then","response","data","name","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,IAAI,EAAE,WADwB;AAE9BD,EAAAA;AAF8B,CAAL,CAAtB;AAIP,OAAO,MAAME,WAAW,GAAGC,QAAQ,KAAK;AACpCF,EAAAA,IAAI,EAAE,cAD8B;AAEpCE,EAAAA;AAFoC,CAAL,CAA5B;AAKP,OAAO,MAAMC,WAAW,GAAGC,QAAQ,KAAK;AACpCJ,EAAAA,IAAI,EAAE,cAD8B;AAEpCI,EAAAA;AAFoC,CAAL,CAA5B;AAKP,OAAO,MAAMC,aAAa,GAAGC,UAAU,KAAK;AACxCN,EAAAA,IAAI,EAAE,kBADkC;AAExCM,EAAAA;AAFwC,CAAL,CAAhC;AAKP,OAAO,MAAMC,UAAU,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA,gCACzBA,QAAQ,GAAGC,YADc;AAAA,QAC5CX,KAD4C,yBAC5CA,KAD4C;AAAA,QACrCK,QADqC,yBACrCA,QADqC;AAEpD,SAAOT,KAAK,CAACgB,IAAN,CAAW,iBAAX,EAA8B;AACjCZ,IAAAA,KAAK,EAAEA,KAD0B;AAEjCK,IAAAA,QAAQ,EAAER,GAAG,CAACQ,QAAD;AAFoB,GAA9B,EAINQ,IAJM,CAIDC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,IAAT,CAAcD,QAAd,KAA2B,IAA9B,EAAoC;AAChCL,MAAAA,QAAQ,CAACP,WAAW,CAACY,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAZ,CAAR;AACA,aAAO,IAAP;AACH,KAHD,MAGK;AACD,aAAO,KAAP;AACH;AACJ,GAXM,EAYNC,KAZM,CAYAC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,GAAxB;AACH,GAdM,CAAP;AAeH,CAjBM","sourcesContent":["import axios from 'axios';\nimport md5 from 'md5';\nimport jwt_decode from 'jwt-decode'\n\nexport const setEmail = email => ({ \n    type: 'SET_EMAIL',\n    email,\n  });\nexport const setUsername = username => ({ \n    type: 'SET_USERNAME',\n    username,\n});\n\nexport const setPassword = password => ({ \n    type: 'SET_PASSWORD',\n    password,\n});\n\nexport const setIsLoggedIn = isLoggedIn => ({\n    type: 'SET_IS_LOGGED_IN',\n    isLoggedIn,\n});\n\nexport const verifyUser = () => (dispatch, getState) => {\n    const { email, password} = getState().loginReducer;\n    return axios.post('/service1/login', {\n        email: email,\n        password: md5(password),\n    })\n    .then(response => {\n        if(response.data.response === true) {\n            dispatch(setUsername(response.data.name));\n            return true;\n        }else{\n            return false;\n        }\n    })\n    .catch(err => {\n        console.log('error: ' + err);\n    })\n}"]},"metadata":{},"sourceType":"module"}