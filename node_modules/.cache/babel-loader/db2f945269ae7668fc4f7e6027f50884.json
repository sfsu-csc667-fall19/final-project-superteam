{"ast":null,"code":"import _defineProperty from \"/Users/macx/Desktop/hw3-teamx/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst INITIAL_STATE = {\n  content: '',\n  username: '',\n  email: '',\n  notes: [],\n  newNotes: '',\n  noteID: '',\n  previousNotes: '',\n  isEditSubmitted: false,\n  isEditClicked: false,\n  isNoteAdded: false\n};\n\nconst notesReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'SET_EMAIL':\n      return _objectSpread({}, state, {\n        email: action.email\n      });\n\n    case 'SET_NOTES':\n      return _objectSpread({}, state, {\n        notes: action.notes\n      });\n\n    case 'SET_NOTE_ID':\n      return _objectSpread({}, state, {\n        noteID: action.noteID\n      });\n\n    case 'SET_NEW_NOTES':\n      return _objectSpread({}, state, {\n        newNotes: action.newNotes\n      });\n\n    case 'SET_CONTENT':\n      return _objectSpread({}, state, {\n        content: action.content\n      });\n\n    case 'SET_PREVIOUS_NOTES':\n      return _objectSpread({}, state, {\n        previousNotes: action.previousNotes\n      });\n\n    case 'SET_USERNAME':\n      return _objectSpread({}, state, {\n        username: action.username\n      });\n\n    case 'SET_IS_NOTE_ADDED':\n      return _objectSpread({}, state, {\n        isNoteAdded: action.isNoteAdded\n      });\n\n    case 'SET_IS_EDIT_CLICKED':\n      return _objectSpread({}, state, {\n        isEditClicked: action.isEditClicked\n      });\n\n    case 'SET_IS_EDIT_SUBMITTED':\n      return _objectSpread({}, state, {\n        isEditSubmitted: action.isEditSubmitted\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default notesReducer;","map":{"version":3,"sources":["/Users/macx/Desktop/hw3-teamx/src/redux/reducers/notesReducer.js"],"names":["INITIAL_STATE","content","username","email","notes","newNotes","noteID","previousNotes","isEditSubmitted","isEditClicked","isNoteAdded","notesReducer","state","action","type"],"mappings":";;;;;;AAAA,MAAMA,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,EADS;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,KAAK,EAAE,EAHW;AAIlBC,EAAAA,KAAK,EAAE,EAJW;AAKlBC,EAAAA,QAAQ,EAAE,EALQ;AAMlBC,EAAAA,MAAM,EAAE,EANU;AAOlBC,EAAAA,aAAa,EAAE,EAPG;AAQlBC,EAAAA,eAAe,EAAE,KARC;AASlBC,EAAAA,aAAa,EAAE,KATG;AAUlBC,EAAAA,WAAW,EAAE;AAVK,CAAtB;;AAaE,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGZ,aAAT,EAAwBa,MAAxB,KAAmC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,+BACKF,KADL;AAEET,QAAAA,KAAK,EAAEU,MAAM,CAACV;AAFhB;;AAIF,SAAK,WAAL;AACE,+BACKS,KADL;AAEER,QAAAA,KAAK,EAAES,MAAM,CAACT;AAFhB;;AAIF,SAAK,aAAL;AACE,+BACKQ,KADL;AAEEN,QAAAA,MAAM,EAAEO,MAAM,CAACP;AAFjB;;AAIF,SAAK,eAAL;AACE,+BACKM,KADL;AAEEP,QAAAA,QAAQ,EAAEQ,MAAM,CAACR;AAFnB;;AAIF,SAAK,aAAL;AACE,+BACKO,KADL;AAEEX,QAAAA,OAAO,EAAEY,MAAM,CAACZ;AAFlB;;AAIF,SAAK,oBAAL;AACE,+BACKW,KADL;AAEEL,QAAAA,aAAa,EAAEM,MAAM,CAACN;AAFxB;;AAIF,SAAK,cAAL;AACE,+BACKK,KADL;AAEEV,QAAAA,QAAQ,EAAEW,MAAM,CAACX;AAFnB;;AAIF,SAAK,mBAAL;AACE,+BACKU,KADL;AAEEF,QAAAA,WAAW,EAAEG,MAAM,CAACH;AAFtB;;AAIA,SAAK,qBAAL;AACE,+BACKE,KADL;AAEEH,QAAAA,aAAa,EAAEI,MAAM,CAACJ;AAFxB;;AAIF,SAAK,uBAAL;AACE,+BACKG,KADL;AAEEJ,QAAAA,eAAe,EAAEK,MAAM,CAACL;AAF1B;;AAIJ;AACE,aAAOI,KAAP;AApDJ;AAsDD,CAvDD;;AAyDA,eAAeD,YAAf","sourcesContent":["const INITIAL_STATE = {\n    content: '',\n    username: '',\n    email: '',\n    notes: [],\n    newNotes: '',\n    noteID: '',\n    previousNotes: '',\n    isEditSubmitted: false,\n    isEditClicked: false,\n    isNoteAdded: false,\n  };\n  \n  const notesReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n      case 'SET_EMAIL':\n        return{\n          ...state,\n          email: action.email,\n        };\n      case 'SET_NOTES':\n        return{\n          ...state,\n          notes: action.notes,\n        };\n      case 'SET_NOTE_ID':\n        return{\n          ...state,\n          noteID: action.noteID,\n        };\n      case 'SET_NEW_NOTES':\n        return{\n          ...state,\n          newNotes: action.newNotes,\n        };\n      case 'SET_CONTENT':\n        return {\n          ...state, \n          content: action.content,\n        };\n      case 'SET_PREVIOUS_NOTES':\n        return{\n          ...state,\n          previousNotes: action.previousNotes,\n        };\n      case 'SET_USERNAME':\n        return {\n          ...state, \n          username: action.username,\n        };\n      case 'SET_IS_NOTE_ADDED':\n        return {\n          ...state, \n          isNoteAdded: action.isNoteAdded,\n        };\n        case 'SET_IS_EDIT_CLICKED':\n          return{\n            ...state,\n            isEditClicked: action.isEditClicked,\n          };\n        case 'SET_IS_EDIT_SUBMITTED':\n          return{\n            ...state,\n            isEditSubmitted: action.isEditSubmitted,\n          };\n      default:\n        return state;\n    }\n  };\n  \n  export default notesReducer;\n  \n  "]},"metadata":{},"sourceType":"module"}