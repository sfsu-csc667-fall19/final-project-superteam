{"ast":null,"code":"import _defineProperty from \"/Users/macx/Desktop/final-project-superteam/version_2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst INITIAL_STATE = {\n  topic: ''\n};\n\nconst topicReducer = (state = INITIAL_STATE, action) => {\n  // Step 3 create switch for action types\n  switch (action.type) {\n    case 'SET_TOPIC':\n      return _objectSpread({}, state, {\n        topic: action.topic\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default topicReducer;","map":{"version":3,"sources":["/Users/macx/Desktop/final-project-superteam/version_2/src/redux/reducers/topicReducer.js"],"names":["INITIAL_STATE","topic","topicReducer","state","action","type"],"mappings":";;;;;;AAAA,MAAMA,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE;AADW,CAAtB;;AAIE,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,+BACOF,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAFlB;;AAIN;AACE,aAAOE,KAAP;AAPJ;AASD,CAXD;;AAaA,eAAeD,YAAf","sourcesContent":["const INITIAL_STATE = {\n    topic: '',\n  };\n  \n  const topicReducer = (state = INITIAL_STATE, action) => {\n    // Step 3 create switch for action types\n    switch (action.type) {\n        case 'SET_TOPIC':\n            return {\n                ...state, \n                topic: action.topic,\n            };\n      default:\n        return state;\n    }\n  };\n  \n  export default topicReducer;\n  \n  "]},"metadata":{},"sourceType":"module"}