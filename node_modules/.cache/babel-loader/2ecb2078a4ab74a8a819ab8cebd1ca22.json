{"ast":null,"code":"import axios from 'axios';\nexport const setTopic = topic => ({\n  type: 'SET_TOPIC',\n  topic\n});\nexport const setMessages = messages => ({\n  type: 'SET_MESSAGES',\n  messages\n});\nexport const setMessage = message => ({\n  type: 'SET_MESSAGE',\n  message\n});\nexport const setIsNewTopicAdded = isNewTopicAdded => ({\n  type: 'SET_IS_NEW_TOPIC_ADDED',\n  isNewTopicAdded\n});\nexport const setCurrentTopic = currentTopic => ({\n  type: 'SET_CURRENT_TOPIC',\n  currentTopic\n});\nexport const setAllTopic = allTopic => ({\n  type: 'SET_ALL_TOPIC',\n  allTopic\n});\nexport const addNewTopic = () => (dispatch, getState) => {\n  const topic = getState().topicReducer.topic;\n  const username = getState().loginReducer.username;\n  return axios.post('/service2/newTopic', {\n    topic: topic,\n    username: username\n  }).then(response => {\n    if (response.data.response) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n};\nexport const getAllTopic = () => (dispatch, getState) => {\n  axios.get('/service2/topic').then(res => {\n    dispatch(setAllTopic(res.data));\n  }).then(console.log);\n};","map":{"version":3,"sources":["/Users/macx/Desktop/final-project-superteam/version_4/src/redux/actions/topicActions.js"],"names":["axios","setTopic","topic","type","setMessages","messages","setMessage","message","setIsNewTopicAdded","isNewTopicAdded","setCurrentTopic","currentTopic","setAllTopic","allTopic","addNewTopic","dispatch","getState","topicReducer","username","loginReducer","post","then","response","data","getAllTopic","get","res","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,IAAI,EAAE,WADwB;AAE9BD,EAAAA;AAF8B,CAAL,CAAtB;AAIL,OAAO,MAAME,WAAW,GAAGC,QAAQ,KAAK;AACtCF,EAAAA,IAAI,EAAE,cADgC;AAEtCE,EAAAA;AAFsC,CAAL,CAA5B;AAIP,OAAO,MAAMC,UAAU,GAAGC,OAAO,KAAK;AACpCJ,EAAAA,IAAI,EAAE,aAD8B;AAEpCI,EAAAA;AAFoC,CAAL,CAA1B;AAKP,OAAO,MAAMC,kBAAkB,GAAGC,eAAe,KAAK;AACpDN,EAAAA,IAAI,EAAE,wBAD8C;AAEpDM,EAAAA;AAFoD,CAAL,CAA1C;AAKP,OAAO,MAAMC,eAAe,GAAGC,YAAY,KAAK;AAC9CR,EAAAA,IAAI,EAAE,mBADwC;AAE9CQ,EAAAA;AAF8C,CAAL,CAApC;AAKP,OAAO,MAAMC,WAAW,GAAGC,QAAQ,KAAK;AACtCV,EAAAA,IAAI,EAAE,eADgC;AAEtCU,EAAAA;AAFsC,CAAL,CAA5B;AAKT,OAAO,MAAMC,WAAW,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA,QAC7Cd,KAD6C,GACnCc,QAAQ,GAAGC,YADwB,CAC7Cf,KAD6C;AAAA,QAE7CgB,QAF6C,GAEhCF,QAAQ,GAAGG,YAFqB,CAE7CD,QAF6C;AAGrD,SAAOlB,KAAK,CAACoB,IAAN,CAAW,oBAAX,EAAiC;AACpClB,IAAAA,KAAK,EAAEA,KAD6B;AAEpCgB,IAAAA,QAAQ,EAAEA;AAF0B,GAAjC,EAING,IAJM,CAIDC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,IAAT,CAAcD,QAAjB,EAA2B;AACvB,aAAO,IAAP;AACH,KAFD,MAEK;AACD,aAAO,KAAP;AACH;AACJ,GAVM,CAAP;AAWH,CAdM;AAgBP,OAAO,MAAME,WAAW,GAAG,MAAM,CAACT,QAAD,EAAWC,QAAX,KAAwB;AACrDhB,EAAAA,KAAK,CAACyB,GAAN,CAAU,iBAAV,EACKJ,IADL,CACWK,GAAD,IAAS;AACXX,IAAAA,QAAQ,CAACH,WAAW,CAACc,GAAG,CAACH,IAAL,CAAZ,CAAR;AACH,GAHL,EAIKF,IAJL,CAIUM,OAAO,CAACC,GAJlB;AAKH,CANM","sourcesContent":["import axios from 'axios';\n\n\nexport const setTopic = topic => ({ \n    type: 'SET_TOPIC',\n    topic,\n  });\n  export const setMessages = messages => ({ \n    type: 'SET_MESSAGES',\n    messages,\n  });\n  export const setMessage = message => ({ \n    type: 'SET_MESSAGE',\n    message,\n  });\n\n  export const setIsNewTopicAdded = isNewTopicAdded => ({ \n    type: 'SET_IS_NEW_TOPIC_ADDED',\n    isNewTopicAdded,\n  });\n\n  export const setCurrentTopic = currentTopic => ({ \n    type: 'SET_CURRENT_TOPIC',\n    currentTopic,\n  });\n\n  export const setAllTopic = allTopic => ({ \n    type: 'SET_ALL_TOPIC',\n    allTopic,\n  });\n\nexport const addNewTopic = () => (dispatch, getState) => {\n    const { topic } = getState().topicReducer;\n    const { username } = getState().loginReducer;\n    return axios.post('/service2/newTopic', {\n        topic: topic,\n        username: username\n    })\n    .then(response => {\n        if(response.data.response) {\n            return true;\n        }else{\n            return false;\n        }\n    })\n}\n\nexport const getAllTopic = () => (dispatch, getState) => {\n    axios.get('/service2/topic')\n        .then((res) => {\n            dispatch(setAllTopic(res.data));\n        })\n        .then(console.log);\n}\n"]},"metadata":{},"sourceType":"module"}